//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18033
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace IG_WebServiceAbonne.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SearchByISBNWSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchByAuthorWSOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommentBookWSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListTitreOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListCommentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::IG_WebServiceAbonne.Properties.Settings.Default.IG_WebServiceAbonne_localhost_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SearchByISBNWSCompletedEventHandler SearchByISBNWSCompleted;
        
        /// <remarks/>
        public event SearchByAuthorWSCompletedEventHandler SearchByAuthorWSCompleted;
        
        /// <remarks/>
        public event CommentBookWSCompletedEventHandler CommentBookWSCompleted;
        
        /// <remarks/>
        public event getListTitreCompletedEventHandler getListTitreCompleted;
        
        /// <remarks/>
        public event getListCommentCompletedEventHandler getListCommentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByISBNWS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchByISBNWS(string isbn) {
            object[] results = this.Invoke("SearchByISBNWS", new object[] {
                        isbn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchByISBNWSAsync(string isbn) {
            this.SearchByISBNWSAsync(isbn, null);
        }
        
        /// <remarks/>
        public void SearchByISBNWSAsync(string isbn, object userState) {
            if ((this.SearchByISBNWSOperationCompleted == null)) {
                this.SearchByISBNWSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchByISBNWSOperationCompleted);
            }
            this.InvokeAsync("SearchByISBNWS", new object[] {
                        isbn}, this.SearchByISBNWSOperationCompleted, userState);
        }
        
        private void OnSearchByISBNWSOperationCompleted(object arg) {
            if ((this.SearchByISBNWSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchByISBNWSCompleted(this, new SearchByISBNWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByAuthorWS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchByAuthorWS(string auteur) {
            object[] results = this.Invoke("SearchByAuthorWS", new object[] {
                        auteur});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchByAuthorWSAsync(string auteur) {
            this.SearchByAuthorWSAsync(auteur, null);
        }
        
        /// <remarks/>
        public void SearchByAuthorWSAsync(string auteur, object userState) {
            if ((this.SearchByAuthorWSOperationCompleted == null)) {
                this.SearchByAuthorWSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchByAuthorWSOperationCompleted);
            }
            this.InvokeAsync("SearchByAuthorWS", new object[] {
                        auteur}, this.SearchByAuthorWSOperationCompleted, userState);
        }
        
        private void OnSearchByAuthorWSOperationCompleted(object arg) {
            if ((this.SearchByAuthorWSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchByAuthorWSCompleted(this, new SearchByAuthorWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommentBookWS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommentBookWS(string titreLiv, string commentaire) {
            object[] results = this.Invoke("CommentBookWS", new object[] {
                        titreLiv,
                        commentaire});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommentBookWSAsync(string titreLiv, string commentaire) {
            this.CommentBookWSAsync(titreLiv, commentaire, null);
        }
        
        /// <remarks/>
        public void CommentBookWSAsync(string titreLiv, string commentaire, object userState) {
            if ((this.CommentBookWSOperationCompleted == null)) {
                this.CommentBookWSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommentBookWSOperationCompleted);
            }
            this.InvokeAsync("CommentBookWS", new object[] {
                        titreLiv,
                        commentaire}, this.CommentBookWSOperationCompleted, userState);
        }
        
        private void OnCommentBookWSOperationCompleted(object arg) {
            if ((this.CommentBookWSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommentBookWSCompleted(this, new CommentBookWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getListTitre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getListTitre() {
            object[] results = this.Invoke("getListTitre", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getListTitreAsync() {
            this.getListTitreAsync(null);
        }
        
        /// <remarks/>
        public void getListTitreAsync(object userState) {
            if ((this.getListTitreOperationCompleted == null)) {
                this.getListTitreOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListTitreOperationCompleted);
            }
            this.InvokeAsync("getListTitre", new object[0], this.getListTitreOperationCompleted, userState);
        }
        
        private void OngetListTitreOperationCompleted(object arg) {
            if ((this.getListTitreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListTitreCompleted(this, new getListTitreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getListComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getListComment(string titre) {
            object[] results = this.Invoke("getListComment", new object[] {
                        titre});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getListCommentAsync(string titre) {
            this.getListCommentAsync(titre, null);
        }
        
        /// <remarks/>
        public void getListCommentAsync(string titre, object userState) {
            if ((this.getListCommentOperationCompleted == null)) {
                this.getListCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListCommentOperationCompleted);
            }
            this.InvokeAsync("getListComment", new object[] {
                        titre}, this.getListCommentOperationCompleted, userState);
        }
        
        private void OngetListCommentOperationCompleted(object arg) {
            if ((this.getListCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListCommentCompleted(this, new getListCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchByISBNWSCompletedEventHandler(object sender, SearchByISBNWSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchByISBNWSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchByISBNWSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchByAuthorWSCompletedEventHandler(object sender, SearchByAuthorWSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchByAuthorWSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchByAuthorWSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CommentBookWSCompletedEventHandler(object sender, CommentBookWSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommentBookWSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommentBookWSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getListTitreCompletedEventHandler(object sender, getListTitreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListTitreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListTitreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getListCommentCompletedEventHandler(object sender, getListCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591